<?php

namespace Proxies\__CG__\fibe\Bundle\WWWConfBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Person extends \fibe\Bundle\WWWConfBundle\Entity\Person implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'additionalInformation', 'user', 'label', 'familyName', 'firstName', 'description', 'age', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\Person' . "\0" . 'owns', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\Person' . "\0" . 'papers', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\Person' . "\0" . 'companies', 'openId', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\Person' . "\0" . 'roles', 'mainEvents', 'accounts', 'slug');
        }

        return array('__isInitialized__', 'id', 'additionalInformation', 'user', 'label', 'familyName', 'firstName', 'description', 'age', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\Person' . "\0" . 'owns', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\Person' . "\0" . 'papers', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\Person' . "\0" . 'companies', 'openId', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\Person' . "\0" . 'roles', 'mainEvents', 'accounts', 'slug');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Person $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function computeLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'computeLabel', array());

        return parent::computeLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function slugify()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'slugify', array());

        return parent::slugify();
    }

    /**
     * {@inheritDoc}
     */
    public function onUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onUpdate', array());

        return parent::onUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', array($label));

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function getlabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getlabel', array());

        return parent::getlabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setFamilyName($familyName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFamilyName', array($familyName));

        return parent::setFamilyName($familyName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFamilyName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFamilyName', array());

        return parent::getFamilyName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($firstName));

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setAge($age)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAge', array($age));

        return parent::setAge($age);
    }

    /**
     * {@inheritDoc}
     */
    public function getAge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAge', array());

        return parent::getAge();
    }

    /**
     * {@inheritDoc}
     */
    public function setOpenId($openId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOpenId', array($openId));

        return parent::setOpenId($openId);
    }

    /**
     * {@inheritDoc}
     */
    public function getOpenId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOpenId', array());

        return parent::getOpenId();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaper(\fibe\Bundle\WWWConfBundle\Entity\Paper $papers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaper', array($papers));

        return parent::addPaper($papers);
    }

    /**
     * {@inheritDoc}
     */
    public function removePaper(\fibe\Bundle\WWWConfBundle\Entity\Paper $papers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePaper', array($papers));

        return parent::removePaper($papers);
    }

    /**
     * {@inheritDoc}
     */
    public function getPapers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPapers', array());

        return parent::getPapers();
    }

    /**
     * {@inheritDoc}
     */
    public function addCompany(\fibe\Bundle\WWWConfBundle\Entity\Company $company)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCompany', array($company));

        return parent::addCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCompany(\fibe\Bundle\WWWConfBundle\Entity\Company $company)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCompany', array($company));

        return parent::removeCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', array());

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\fibe\Bundle\WWWConfBundle\Entity\Role $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($roles));

        return parent::addRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\fibe\Bundle\WWWConfBundle\Entity\Role $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', array($roles));

        return parent::removeRole($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainEvent(\Doctrine\Common\Collections\ArrayCollection $mainEvents)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainEvent', array($mainEvents));

        return parent::setMainEvent($mainEvents);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainEvents', array());

        return parent::getMainEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function addAccount(\fibe\Bundle\WWWConfBundle\Entity\SocialServiceAccount $accounts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAccount', array($accounts));

        return parent::addAccount($accounts);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAccount(\fibe\Bundle\WWWConfBundle\Entity\SocialServiceAccount $accounts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAccount', array($accounts));

        return parent::removeAccount($accounts);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccounts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccounts', array());

        return parent::getAccounts();
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\FOS\UserBundle\Model\UserInterface $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

}
