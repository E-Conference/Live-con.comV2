<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        'api_user_login' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fibe\\RestBundle\\Controller\\ApiController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/user/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_user_logout' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fibe\\RestBundle\\Controller\\ApiController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/user/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fibe_frontend_front_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\FrontendBundle\\Controller\\FrontController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/angular',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'documentation' => array (  0 =>   array (    0 => 'anchor',  ),  1 =>   array (    '_controller' => 'fibe\\DocumentationBundle\\Controller\\DocumentationController::documentationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'anchor',    ),    1 =>     array (      0 => 'text',      1 => '/documentation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_conference_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\ConferenceBundle\\Controller\\ConferenceController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/conference',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_conference_empty' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\ConferenceBundle\\Controller\\ConferenceController::emptyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/empty',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/conference',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_conference_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\ConferenceBundle\\Controller\\ConferenceController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/conference/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_conference_module' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\ConferenceBundle\\Controller\\ConferenceController::moduleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/conference/module',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_module_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\ConferenceBundle\\Controller\\ConferenceController::updateModuleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/module',    ),    1 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/conference',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_conference_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\ConferenceBundle\\Controller\\ConferenceController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/conference',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'externalization_export_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\ConferenceBundle\\Controller\\ExportController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exporter/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'externalization_export_process' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\ConferenceBundle\\Controller\\ExportController::processAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exporter/process',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'externalization_import_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\ConferenceBundle\\Controller\\ImportController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/importer/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homePage_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\HomePageBundle\\Controller\\HomePageController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobileAppPublic_index' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'fibe\\MobileAppBundle\\Controller\\MobileAppPublicController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/apps/rest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobileAppPublic_sparql_index' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'fibe\\MobileAppBundle\\Controller\\MobileAppPublicController::indexSparqlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/apps',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobileAppSettings_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\MobileAppBundle\\Controller\\MobileAppSettingsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/app/settings/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobileAppTheme_update_settings' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\MobileAppBundle\\Controller\\MobileAppSettingsController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update/setting',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/app/settings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobileAppTheme_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\MobileAppBundle\\Controller\\MobileAppThemeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/app/theme/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobileAppTheme_update_style' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\MobileAppBundle\\Controller\\MobileAppThemeController::updateMobileAppAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update/style',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/app/theme',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dashboard_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\DashboardBundle\\Controller\\DashboardController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Dashboard/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dashboard_enter_conference' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\DashboardBundle\\Controller\\DashboardController::enterConferenceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/enter',    ),    1 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/Dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'idci_exporter_api_homeapi' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ApiController::apiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/api/schedule/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\CategoryController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/category/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_category_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\CategoryController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_category_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\CategoryController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/category/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_category_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\CategoryController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/category/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_category_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\CategoryController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_category_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\CategoryController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_category_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\CategoryController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/confevent/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_filter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::filterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/confevent/filter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/confevent/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/confevent/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/confevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/confevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/confevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/confevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_addTopic' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::addTopicAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/confevent/addTopic',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_deleteTopic' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::deleteTopicAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/confevent/deleteTopic',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_addPaper' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::addPaperAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/confevent/addPaper',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_deletePaper' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::deletePaperAction',  ),  2 =>   array (    '_method' => 'DELETE|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/confevent/deletePaper',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_addPerson' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::addPersonAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/confevent/addPerson',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_confevent_deletePerson' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ConfEventController::deletePersonAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/confevent/deletePerson',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_admin_DBimport' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\DBImportController::importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/admin/link/DBimport/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_equipment_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\EquipmentController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/equipment/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_equipment_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\EquipmentController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/equipment/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_equipment_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\EquipmentController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/equipment/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_equipment_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\EquipmentController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/equipment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_equipment_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\EquipmentController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/equipment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_equipment_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\EquipmentController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/equipment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_equipment_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\EquipmentController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/equipment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_location' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\LocationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/location/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_location_filter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\LocationController::filterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/location/filter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_location_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\LocationController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/location',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_location_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\LocationController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/location/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_location_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\LocationController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/location/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_location_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\LocationController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/location',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_location_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\LocationController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/location',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_location_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\LocationController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/location',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_organization_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\OrganizationController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/organization/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_organization_filter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\OrganizationController::filterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/organization/filter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_organization_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\OrganizationController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/organization/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_organization_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\OrganizationController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/organization/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_organization_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\OrganizationController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/organization',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_organization_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\OrganizationController::editAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/organization',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_organization_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\OrganizationController::updateAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/organization',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_organization_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\OrganizationController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/organization',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_paper' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PaperController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/paper/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_paper_filter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PaperController::filterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/paper/filter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_paper_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PaperController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/paper/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_paper_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PaperController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/paper/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_paper_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PaperController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/paper',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_paper_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PaperController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/paper',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_paper_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PaperController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/paper',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_paper_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PaperController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/paper',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_person_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PersonController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/person/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_person_filter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PersonController::filterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/person/filter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_person_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PersonController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/person/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_person_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PersonController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/person/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_person_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PersonController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/person',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_person_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PersonController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/person',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_person_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PersonController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/person',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_person_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\PersonController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/person',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_roletype' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\RoleTypeController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/schedule/roletype/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_roletype_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\RoleTypeController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/schedule/roletype/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_roletype_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\RoleTypeController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/schedule/roletype/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_roletype_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\RoleTypeController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/schedule/schedule/roletype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_roletype_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\RoleTypeController::editAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/schedule/roletype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_roletype_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\RoleTypeController::updateAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/schedule/schedule/roletype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_roletype_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\RoleTypeController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/schedule/schedule/roletype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_view' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ScheduleController::scheduleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_view_event_get' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ScheduleController::getEventsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/getEvents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_view_event_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\ScheduleController::scheduleEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/editEvents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_sponsor' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\SponsorController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/sponsor/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_sponsor_filter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\SponsorController::filterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/sponsor/filter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_sponsor_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\SponsorController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/sponsor/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_sponsor_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\SponsorController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/sponsor/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_sponsor_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\SponsorController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/schedule/sponsor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_sponsor_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\SponsorController::editAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/sponsor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_sponsor_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\SponsorController::updateAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/schedule/sponsor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_sponsor_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\SponsorController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/schedule/sponsor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_status' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\StatusController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/status/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_status_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\StatusController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/status',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_status_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\StatusController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/status/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_status_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\StatusController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/status/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_status_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\StatusController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/status',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_status_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\StatusController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/status',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_status_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\StatusController::deleteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/status',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_topic' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\TopicController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/topic/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_topic_filter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\TopicController::filterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/topic/filter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_topic_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\TopicController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/topic/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_topic_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\TopicController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/schedule/topic/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_topic_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\TopicController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/schedule/topic',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_topic_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\TopicController::editAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/topic',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_topic_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\TopicController::updateAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/schedule/topic',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_topic_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\TopicController::deleteAction',  ),  2 =>   array (    '_method' => 'POST|DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/schedule/topic',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'schedule_xproperty_add' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\XPropertyController::addXPropertyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/schedule/xproperty',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'datas_conferences_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\DataBundle\\Controller\\DataController::conferencesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/data/conferences',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'datas_conferences_filter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\DataBundle\\Controller\\DataController::conferencesFilterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/data/filter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'enrich_account' => array (  0 =>   array (    0 => 'socialService',  ),  1 =>   array (    '_controller' => 'fibe\\SecurityBundle\\Controller\\EnrichAccountController::enrichAccountAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'socialService',    ),    1 =>     array (      0 => 'text',      1 => '/enrich',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'conference_team_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\SecurityBundle\\Controller\\TeamController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/team/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'conference_team_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\SecurityBundle\\Controller\\TeamController::addTeamateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/team/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'conference_team_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\SecurityBundle\\Controller\\TeamController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'conference_teamate_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\SecurityBundle\\Controller\\TeamController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'conference_team_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'fibe\\SecurityBundle\\Controller\\TeamController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fibe_security_twitterapi_api' => array (  0 =>   array (    0 => 'name',    1 => 'format',  ),  1 =>   array (    '_controller' => 'fibe\\SecurityBundle\\Controller\\TwitterApiController::apiAction',  ),  2 =>   array (    'name' => '.+',    'format' => '(json|xml)',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '(json|xml)',      3 => 'format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'name',    ),    2 =>     array (      0 => 'text',      1 => '/twitter-api',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exporter_api_norewrite' => array (  0 =>   array (  ),  1 =>   array (    'entityReference' => 'null',    '_format' => 'xml',    '_controller' => 'IDCI\\Bundle\\ExporterBundle\\Controller\\ApiController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/query',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exporter_api' => array (  0 =>   array (    0 => 'entityReference',    1 => '_format',  ),  1 =>   array (    '_format' => 'xml',    '_controller' => 'IDCI\\Bundle\\ExporterBundle\\Controller\\ApiController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'entityReference',    ),    2 =>     array (      0 => 'text',      1 => '/api',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/user/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\SecurityBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fibe\\SecurityBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hwi_oauth_connect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HWI\\Bundle\\OAuthBundle\\Controller\\ConnectController::connectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hwi_oauth_connect_service' => array (  0 =>   array (    0 => 'service',  ),  1 =>   array (    '_controller' => 'HWI\\Bundle\\OAuthBundle\\Controller\\ConnectController::connectServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'service',    ),    1 =>     array (      0 => 'text',      1 => '/login/service',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hwi_oauth_connect_registration' => array (  0 =>   array (    0 => 'key',  ),  1 =>   array (    '_controller' => 'HWI\\Bundle\\OAuthBundle\\Controller\\ConnectController::registrationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key',    ),    1 =>     array (      0 => 'text',      1 => '/login/registration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hwi_oauth_service_redirect' => array (  0 =>   array (    0 => 'service',  ),  1 =>   array (    '_controller' => 'HWI\\Bundle\\OAuthBundle\\Controller\\ConnectController::redirectToServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'service',    ),    1 =>     array (      0 => 'text',      1 => '/connect',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'google_login' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/check-google',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'twitter_login' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/check-twitter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'facebook_login' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/check-facebook',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'linkedin_login' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/check-linkedin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'apiREST_get_organization' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\REST\\OrganizationRESTController::getOrganizationAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/apiREST/organizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'apiREST_get_organizations' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\REST\\OrganizationRESTController::getOrganizationsAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/apiREST/organizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'apiREST_post_organization' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\REST\\OrganizationRESTController::postOrganizationAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'POST',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/apiREST/organizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'apiREST_put_organization' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\REST\\OrganizationRESTController::putOrganizationAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'PUT',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/apiREST/organizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'apiREST_delete_organization' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\REST\\OrganizationRESTController::deleteOrganizationAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'DELETE',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/apiREST/organizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'apiREST_get_person' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'fibe\\Bundle\\WWWConfBundle\\Controller\\REST\\PersonRESTController::getPersonAction',    '_format' => NULL,  ),  2 =>   array (    '_method' => 'GET',    '_format' => 'json|xml|html',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/apiREST/people',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_export' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.txt',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
