<?php

namespace Proxies\__CG__\fibe\MobileAppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MobileAppConfig extends \fibe\MobileAppBundle\Entity\MobileAppConfig implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'fibe\\MobileAppBundle\\Entity\\MobileAppConfig' . "\0" . 'id', '' . "\0" . 'fibe\\MobileAppBundle\\Entity\\MobileAppConfig' . "\0" . 'mainEvent', 'BGColorContent', 'BGColorHeader', 'BGColorNavBar', 'BGColorfooter', 'TitleColorContent', 'TitleColorHeader', 'TitleColorNavBar', 'TitleColorFooter', 'BGColorButton', 'TitleColorButton', 'IsPublished', '' . "\0" . 'fibe\\MobileAppBundle\\Entity\\MobileAppConfig' . "\0" . 'dblpDatasource', '' . "\0" . 'fibe\\MobileAppBundle\\Entity\\MobileAppConfig' . "\0" . 'googleDatasource', '' . "\0" . 'fibe\\MobileAppBundle\\Entity\\MobileAppConfig' . "\0" . 'duckduckgoDatasource', 'lang');
        }

        return array('__isInitialized__', '' . "\0" . 'fibe\\MobileAppBundle\\Entity\\MobileAppConfig' . "\0" . 'id', '' . "\0" . 'fibe\\MobileAppBundle\\Entity\\MobileAppConfig' . "\0" . 'mainEvent', 'BGColorContent', 'BGColorHeader', 'BGColorNavBar', 'BGColorfooter', 'TitleColorContent', 'TitleColorHeader', 'TitleColorNavBar', 'TitleColorFooter', 'BGColorButton', 'TitleColorButton', 'IsPublished', '' . "\0" . 'fibe\\MobileAppBundle\\Entity\\MobileAppConfig' . "\0" . 'dblpDatasource', '' . "\0" . 'fibe\\MobileAppBundle\\Entity\\MobileAppConfig' . "\0" . 'googleDatasource', '' . "\0" . 'fibe\\MobileAppBundle\\Entity\\MobileAppConfig' . "\0" . 'duckduckgoDatasource', 'lang');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MobileAppConfig $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainEvent(\fibe\ConferenceBundle\Entity\MainEvent $mainEvent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainEvent', array($mainEvent));

        return parent::setMainEvent($mainEvent);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainEvent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainEvent', array());

        return parent::getMainEvent();
    }

    /**
     * {@inheritDoc}
     */
    public function setDblpDatasource($dblpDatasource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDblpDatasource', array($dblpDatasource));

        return parent::setDblpDatasource($dblpDatasource);
    }

    /**
     * {@inheritDoc}
     */
    public function getDblpDatasource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDblpDatasource', array());

        return parent::getDblpDatasource();
    }

    /**
     * {@inheritDoc}
     */
    public function setGoogleDatasource($googleDatasource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGoogleDatasource', array($googleDatasource));

        return parent::setGoogleDatasource($googleDatasource);
    }

    /**
     * {@inheritDoc}
     */
    public function getGoogleDatasource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGoogleDatasource', array());

        return parent::getGoogleDatasource();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuckduckgoDatasource($duckduckgoDatasource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuckduckgoDatasource', array($duckduckgoDatasource));

        return parent::setDuckduckgoDatasource($duckduckgoDatasource);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuckduckgoDatasource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuckduckgoDatasource', array());

        return parent::getDuckduckgoDatasource();
    }

    /**
     * {@inheritDoc}
     */
    public function setBGColorContent($bGColorContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBGColorContent', array($bGColorContent));

        return parent::setBGColorContent($bGColorContent);
    }

    /**
     * {@inheritDoc}
     */
    public function getBGColorContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBGColorContent', array());

        return parent::getBGColorContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setBGColorHeader($bGColorHeader)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBGColorHeader', array($bGColorHeader));

        return parent::setBGColorHeader($bGColorHeader);
    }

    /**
     * {@inheritDoc}
     */
    public function getBGColorHeader()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBGColorHeader', array());

        return parent::getBGColorHeader();
    }

    /**
     * {@inheritDoc}
     */
    public function setBGColorNavBar($bGColorNavBar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBGColorNavBar', array($bGColorNavBar));

        return parent::setBGColorNavBar($bGColorNavBar);
    }

    /**
     * {@inheritDoc}
     */
    public function getBGColorNavBar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBGColorNavBar', array());

        return parent::getBGColorNavBar();
    }

    /**
     * {@inheritDoc}
     */
    public function setBGColorfooter($bGColorfooter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBGColorfooter', array($bGColorfooter));

        return parent::setBGColorfooter($bGColorfooter);
    }

    /**
     * {@inheritDoc}
     */
    public function getBGColorfooter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBGColorfooter', array());

        return parent::getBGColorfooter();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleColorContent($TitleColorContent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleColorContent', array($TitleColorContent));

        return parent::setTitleColorContent($TitleColorContent);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleColorContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleColorContent', array());

        return parent::getTitleColorContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleColorHeader($TitleColorHeader)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleColorHeader', array($TitleColorHeader));

        return parent::setTitleColorHeader($TitleColorHeader);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleColorHeader()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleColorHeader', array());

        return parent::getTitleColorHeader();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleColorNavBar($TitleColorNavBar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleColorNavBar', array($TitleColorNavBar));

        return parent::setTitleColorNavBar($TitleColorNavBar);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleColorNavBar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleColorNavBar', array());

        return parent::getTitleColorNavBar();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleColorFooter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleColorFooter', array());

        return parent::getTitleColorFooter();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleColorFooter($titleColorFooter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleColorFooter', array($titleColorFooter));

        return parent::setTitleColorFooter($titleColorFooter);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPublished($isPublished)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPublished', array($isPublished));

        return parent::setIsPublished($isPublished);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPublished', array());

        return parent::getIsPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setBGColorButton($BGColorButton)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBGColorButton', array($BGColorButton));

        return parent::setBGColorButton($BGColorButton);
    }

    /**
     * {@inheritDoc}
     */
    public function getBGColorButton()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBGColorButton', array());

        return parent::getBGColorButton();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleColorButton($TitleColorButton)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleColorButton', array($TitleColorButton));

        return parent::setTitleColorButton($TitleColorButton);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleColorButton()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleColorButton', array());

        return parent::getTitleColorButton();
    }

    /**
     * {@inheritDoc}
     */
    public function setLang($lang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLang', array($lang));

        return parent::setLang($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function getLang()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLang', array());

        return parent::getLang();
    }

}
