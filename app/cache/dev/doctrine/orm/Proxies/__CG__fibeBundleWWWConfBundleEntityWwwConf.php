<?php

namespace Proxies\__CG__\fibe\Bundle\WWWConfBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class WwwConf extends \fibe\Bundle\WWWConfBundle\Entity\WwwConf implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'id', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'events', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'locations', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'papers', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'persons', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'roles', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'organizations', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'topics', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'sponsors', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'confManagers', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'team', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'categories', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'appConfig', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'mappingFiles', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'module', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'logo', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'logoPath', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'mainConfEvent', 'slug');
        }

        return array('__isInitialized__', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'id', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'events', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'locations', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'papers', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'persons', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'roles', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'organizations', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'topics', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'sponsors', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'confManagers', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'team', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'categories', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'appConfig', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'mappingFiles', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'module', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'logo', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'logoPath', '' . "\0" . 'fibe\\Bundle\\WWWConfBundle\\Entity\\WwwConf' . "\0" . 'mainConfEvent', 'slug');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (WwwConf $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function slugify()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'slugify', array());

        return parent::slugify();
    }

    /**
     * {@inheritDoc}
     */
    public function onUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onUpdate', array());

        return parent::onUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getConfName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfName', array());

        return parent::getConfName();
    }

    /**
     * {@inheritDoc}
     */
    public function addConfManager(\fibe\SecurityBundle\Entity\User $confManager = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConfManager', array($confManager));

        return parent::addConfManager($confManager);
    }

    /**
     * {@inheritDoc}
     */
    public function removeConfManager(\fibe\SecurityBundle\Entity\User $confManager)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeConfManager', array($confManager));

        return parent::removeConfManager($confManager);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfManagers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfManagers', array());

        return parent::getConfManagers();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo(\Symfony\Component\HttpFoundation\File\UploadedFile $logo = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', array($logo));

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', array());

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogoPath($logoPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogoPath', array($logoPath));

        return parent::setLogoPath($logoPath);
    }

    /**
     * {@inheritDoc}
     */
    public function LogoPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'LogoPath', array());

        return parent::LogoPath();
    }

    /**
     * {@inheritDoc}
     */
    public function addLocation(\fibe\Bundle\WWWConfBundle\Entity\Location $locations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLocation', array($locations));

        return parent::addLocation($locations);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLocation(\fibe\Bundle\WWWConfBundle\Entity\Location $locations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLocation', array($locations));

        return parent::removeLocation($locations);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocations', array());

        return parent::getLocations();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaper(\fibe\Bundle\WWWConfBundle\Entity\Paper $papers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaper', array($papers));

        return parent::addPaper($papers);
    }

    /**
     * {@inheritDoc}
     */
    public function removePaper(\fibe\Bundle\WWWConfBundle\Entity\Paper $papers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePaper', array($papers));

        return parent::removePaper($papers);
    }

    /**
     * {@inheritDoc}
     */
    public function getPapers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPapers', array());

        return parent::getPapers();
    }

    /**
     * {@inheritDoc}
     */
    public function addPerson(\fibe\Bundle\WWWConfBundle\Entity\Person $persons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPerson', array($persons));

        return parent::addPerson($persons);
    }

    /**
     * {@inheritDoc}
     */
    public function removePerson(\fibe\Bundle\WWWConfBundle\Entity\Person $persons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePerson', array($persons));

        return parent::removePerson($persons);
    }

    /**
     * {@inheritDoc}
     */
    public function getPersons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPersons', array());

        return parent::getPersons();
    }

    /**
     * {@inheritDoc}
     */
    public function setTeam($team)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeam', array($team));

        return parent::setTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeam', array());

        return parent::getTeam();
    }

    /**
     * {@inheritDoc}
     */
    public function setAppConfig($AppConfig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAppConfig', array($AppConfig));

        return parent::setAppConfig($AppConfig);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppConfig', array());

        return parent::getAppConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function addTopic(\fibe\Bundle\WWWConfBundle\Entity\Topic $topics)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTopic', array($topics));

        return parent::addTopic($topics);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTopic(\fibe\Bundle\WWWConfBundle\Entity\Topic $topics)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTopic', array($topics));

        return parent::removeTopic($topics);
    }

    /**
     * {@inheritDoc}
     */
    public function getTopics()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTopics', array());

        return parent::getTopics();
    }

    /**
     * {@inheritDoc}
     */
    public function addSponsor(\fibe\Bundle\WWWConfBundle\Entity\Topic $sponsors)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSponsor', array($sponsors));

        return parent::addSponsor($sponsors);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSponsor(\fibe\Bundle\WWWConfBundle\Entity\Topic $sponsors)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSponsor', array($sponsors));

        return parent::removeSponsor($sponsors);
    }

    /**
     * {@inheritDoc}
     */
    public function getSponsors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSponsors', array());

        return parent::getSponsors();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrganization(\fibe\Bundle\WWWConfBundle\Entity\Organization $organizations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrganization', array($organizations));

        return parent::addOrganization($organizations);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrganization(\fibe\Bundle\WWWConfBundle\Entity\Organization $organizations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrganization', array($organizations));

        return parent::removeOrganization($organizations);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizations', array());

        return parent::getOrganizations();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainConfEvent(\fibe\Bundle\WWWConfBundle\Entity\ConfEvent $mainConfEvent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainConfEvent', array($mainConfEvent));

        return parent::setMainConfEvent($mainConfEvent);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainConfEvent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainConfEvent', array());

        return parent::getMainConfEvent();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvent(\fibe\Bundle\WWWConfBundle\Entity\ConfEvent $events)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvent', array($events));

        return parent::addEvent($events);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEvent(\fibe\Bundle\WWWConfBundle\Entity\ConfEvent $events)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEvent', array($events));

        return parent::removeEvent($events);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvents', array());

        return parent::getEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubEvents', array());

        return parent::getSubEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function uploadLogo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'uploadLogo', array());

        return parent::uploadLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogoPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogoPath', array());

        return parent::getLogoPath();
    }

    /**
     * {@inheritDoc}
     */
    public function isEmpty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEmpty', array());

        return parent::isEmpty();
    }

    /**
     * {@inheritDoc}
     */
    public function addMappingFile(\fibe\Bundle\WWWConfBundle\Entity\MappingFile $mappingFiles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMappingFile', array($mappingFiles));

        return parent::addMappingFile($mappingFiles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMappingFile(\fibe\Bundle\WWWConfBundle\Entity\MappingFile $mappingFiles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMappingFile', array($mappingFiles));

        return parent::removeMappingFile($mappingFiles);
    }

    /**
     * {@inheritDoc}
     */
    public function getMappingFiles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMappingFiles', array());

        return parent::getMappingFiles();
    }

    /**
     * {@inheritDoc}
     */
    public function setModule(\fibe\Bundle\WWWConfBundle\Entity\Module $module = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModule', array($module));

        return parent::setModule($module);
    }

    /**
     * {@inheritDoc}
     */
    public function getModule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModule', array());

        return parent::getModule();
    }

}
