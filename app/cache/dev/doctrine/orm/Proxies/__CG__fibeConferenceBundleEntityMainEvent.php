<?php

namespace Proxies\__CG__\fibe\ConferenceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MainEvent extends \fibe\ConferenceBundle\Entity\MainEvent implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'appConfig', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'module', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'events', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'locations', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'papers', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'roles', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'companies', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'topics', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'sponsors', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'persons', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'team', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'settings', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'logo', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'logoPath', 'slug', 'acronym', 'id', 'label', 'startAt', 'endAt', 'summary', 'description', 'comment', 'organizer', 'revisionSequence', 'attendees', 'contacts', 'classification', 'status', 'priority', 'location', 'url', 'createdAt', 'lastModifiedAt');
        }

        return array('__isInitialized__', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'appConfig', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'module', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'events', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'locations', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'papers', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'roles', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'companies', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'topics', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'sponsors', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'persons', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'team', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'settings', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'logo', '' . "\0" . 'fibe\\ConferenceBundle\\Entity\\MainEvent' . "\0" . 'logoPath', 'slug', 'acronym', 'id', 'label', 'startAt', 'endAt', 'summary', 'description', 'comment', 'organizer', 'revisionSequence', 'attendees', 'contacts', 'classification', 'status', 'priority', 'location', 'url', 'createdAt', 'lastModifiedAt');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MainEvent $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function slugify()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'slugify', array());

        return parent::slugify();
    }

    /**
     * {@inheritDoc}
     */
    public function onUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onUpdate', array());

        return parent::onUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo(\Symfony\Component\HttpFoundation\File\UploadedFile $logo = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', array($logo));

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', array());

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogoPath($logoPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogoPath', array($logoPath));

        return parent::setLogoPath($logoPath);
    }

    /**
     * {@inheritDoc}
     */
    public function LogoPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'LogoPath', array());

        return parent::LogoPath();
    }

    /**
     * {@inheritDoc}
     */
    public function addLocation(\fibe\Bundle\WWWConfBundle\Entity\Location $locations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLocation', array($locations));

        return parent::addLocation($locations);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLocation(\fibe\Bundle\WWWConfBundle\Entity\Location $locations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLocation', array($locations));

        return parent::removeLocation($locations);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocations', array());

        return parent::getLocations();
    }

    /**
     * {@inheritDoc}
     */
    public function addPaper(\fibe\Bundle\WWWConfBundle\Entity\Paper $papers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPaper', array($papers));

        return parent::addPaper($papers);
    }

    /**
     * {@inheritDoc}
     */
    public function removePaper(\fibe\Bundle\WWWConfBundle\Entity\Paper $papers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePaper', array($papers));

        return parent::removePaper($papers);
    }

    /**
     * {@inheritDoc}
     */
    public function getPapers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPapers', array());

        return parent::getPapers();
    }

    /**
     * {@inheritDoc}
     */
    public function addPerson(\fibe\Bundle\WWWConfBundle\Entity\Person $persons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPerson', array($persons));

        return parent::addPerson($persons);
    }

    /**
     * {@inheritDoc}
     */
    public function removePerson(\fibe\Bundle\WWWConfBundle\Entity\Person $persons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePerson', array($persons));

        return parent::removePerson($persons);
    }

    /**
     * {@inheritDoc}
     */
    public function getPersons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPersons', array());

        return parent::getPersons();
    }

    /**
     * {@inheritDoc}
     */
    public function setTeam($team)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeam', array($team));

        return parent::setTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeam', array());

        return parent::getTeam();
    }

    /**
     * {@inheritDoc}
     */
    public function setAppConfig($AppConfig)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAppConfig', array($AppConfig));

        return parent::setAppConfig($AppConfig);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppConfig', array());

        return parent::getAppConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function addTopic(\fibe\Bundle\WWWConfBundle\Entity\Topic $topics)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTopic', array($topics));

        return parent::addTopic($topics);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTopic(\fibe\Bundle\WWWConfBundle\Entity\Topic $topics)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTopic', array($topics));

        return parent::removeTopic($topics);
    }

    /**
     * {@inheritDoc}
     */
    public function getTopics()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTopics', array());

        return parent::getTopics();
    }

    /**
     * {@inheritDoc}
     */
    public function addSponsor(\fibe\Bundle\WWWConfBundle\Entity\Sponsor $sponsor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSponsor', array($sponsor));

        return parent::addSponsor($sponsor);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSponsor(\fibe\Bundle\WWWConfBundle\Entity\Sponsor $sponsor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSponsor', array($sponsor));

        return parent::removeSponsor($sponsor);
    }

    /**
     * {@inheritDoc}
     */
    public function getSponsors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSponsors', array());

        return parent::getSponsors();
    }

    /**
     * {@inheritDoc}
     */
    public function addCompany(\fibe\Bundle\WWWConfBundle\Entity\Company $companies)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCompany', array($companies));

        return parent::addCompany($companies);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCompany(\fibe\Bundle\WWWConfBundle\Entity\Company $companies)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCompany', array($companies));

        return parent::removeCompany($companies);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompanies()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompanies', array());

        return parent::getCompanies();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvent(\fibe\Bundle\WWWConfBundle\Entity\VEvent $events)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvent', array($events));

        return parent::addEvent($events);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEvent(\fibe\Bundle\WWWConfBundle\Entity\VEvent $events)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEvent', array($events));

        return parent::removeEvent($events);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvents', array());

        return parent::getEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubEvents', array());

        return parent::getSubEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function uploadLogo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'uploadLogo', array());

        return parent::uploadLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function getLogoPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogoPath', array());

        return parent::getLogoPath();
    }

    /**
     * {@inheritDoc}
     */
    public function isEmpty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEmpty', array());

        return parent::isEmpty();
    }

    /**
     * {@inheritDoc}
     */
    public function setModule(\fibe\Bundle\WWWConfBundle\Entity\Module $module = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModule', array($module));

        return parent::setModule($module);
    }

    /**
     * {@inheritDoc}
     */
    public function getModule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModule', array());

        return parent::getModule();
    }

    /**
     * {@inheritDoc}
     */
    public function setAcronym($acronym)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcronym', array($acronym));

        return parent::setAcronym($acronym);
    }

    /**
     * {@inheritDoc}
     */
    public function getAcronym()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcronym', array());

        return parent::getAcronym();
    }

    /**
     * {@inheritDoc}
     */
    public function computeEndAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'computeEndAt', array());

        return parent::computeEndAt();
    }

    /**
     * {@inheritDoc}
     */
    public function onCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onCreation', array());

        return parent::onCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function getUID($domain = 'default')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUID', array($domain));

        return parent::getUID($domain);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormatedStartAt($format = 'D, d M Y H:i:s O', $timezone = 'Europe/Paris')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormatedStartAt', array($format, $timezone));

        return parent::getFormatedStartAt($format, $timezone);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartAt($startAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartAt', array($startAt));

        return parent::setStartAt($startAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartAt', array());

        return parent::getStartAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastModifiedAt(\DateTime $lastModifiedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastModifiedAt', array($lastModifiedAt));

        return parent::setLastModifiedAt($lastModifiedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastModifiedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastModifiedAt', array());

        return parent::getLastModifiedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSummary($summary)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSummary', array($summary));

        return parent::setSummary($summary);
    }

    /**
     * {@inheritDoc}
     */
    public function getSummary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSummary', array());

        return parent::getSummary();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', array($comment));

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', array());

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAllDay($isAllDay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAllDay', array($isAllDay));

        return parent::setIsAllDay($isAllDay);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAllDay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAllDay', array());

        return parent::getIsAllDay();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsInstant($isInstant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsInstant', array($isInstant));

        return parent::setIsInstant($isInstant);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsInstant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsInstant', array());

        return parent::getIsInstant();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', array($url));

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', array());

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizer($organizer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizer', array($organizer));

        return parent::setOrganizer($organizer);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizer', array());

        return parent::getOrganizer();
    }

    /**
     * {@inheritDoc}
     */
    public function setRevisionSequence($revisionSequence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRevisionSequence', array($revisionSequence));

        return parent::setRevisionSequence($revisionSequence);
    }

    /**
     * {@inheritDoc}
     */
    public function getRevisionSequence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRevisionSequence', array());

        return parent::getRevisionSequence();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttendees($attendees)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttendees', array($attendees));

        return parent::setAttendees($attendees);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttendees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttendees', array());

        return parent::getAttendees();
    }

    /**
     * {@inheritDoc}
     */
    public function setContacts($contacts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContacts', array($contacts));

        return parent::setContacts($contacts);
    }

    /**
     * {@inheritDoc}
     */
    public function getContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContacts', array());

        return parent::getContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function setClassification($classification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClassification', array($classification));

        return parent::setClassification($classification);
    }

    /**
     * {@inheritDoc}
     */
    public function getClassification()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClassification', array());

        return parent::getClassification();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation(\fibe\Bundle\WWWConfBundle\Entity\Location $location = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', array($location));

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', array());

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\fibe\Bundle\WWWConfBundle\Entity\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($role));

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\fibe\Bundle\WWWConfBundle\Entity\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', array($role));

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', array());

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', array($label));

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndAt', array());

        return parent::getEndAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndAt($endAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndAt', array($endAt));

        return parent::setEndAt($endAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', array());

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', array($priority));

        return parent::setPriority($priority);
    }

}
