jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
       # Symfony\Component\Security\Core\User\User: plaintext
        fibe\SecurityBundle\Entity\User:
          algorithm: sha1
          iterations: 2
          encode_as_base64: false

    providers:
        main:
            id: fos_user.user_provider.username

    acl:
        connection: default

    access_decision_manager:
        # La valeur de « Strategy » peut être : affirmative, unanimous ou consensus
        strategy: affirmative

#        in_memory:
#            memory:
#                users:
#                    #define here the user password of the "admin" account
#                    admin: { password: wwwconfTER, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false



        wsse_secured:
            pattern: ^/apiREST/
            wsse: { lifetime: 30}


        #old not rest application

        main_login:
            pattern:   /*
            anonymous: true # On autorise les anonymes sur ce pare-feu



        main:
#            remember_me:
#                key:      "%secret%"
#                lifetime: 31536000 # 365 days in seconds
#                path:     /
#                domain:   ~ # Defaults to the current domain from $_SERVER
#            pattern:   ^/
#            anonymous: ~
#            provider:  main
#            form_login:
#                login_path: /login
#                check_path: /login/login_check
#                default_target_path: dashboard_index
#                #
                # success_handler: fibe_security.select_conference_success_handler
            oauth:
                resource_owners:
                    google:         "/login/check-google"
                    twitter:        "/login/check-twitter"
                    facebook:       "/login/check-facebook"
                    linkedin:       "/login/check-linkedin"
                login_path:        /login
                failure_path:      /login
                default_target_path: /Dashboard
                # use_forward:       true

                oauth_user_provider:
                    #this is my custom user provider, created from FOSUBUserProvider - will manage the
                    #automatic user registration on your site, with data from the provider (facebook. google, etc.)
                    service: my_user_provider
            logout:
                path:   logout
                target: /login

    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }

